"""
Django settings for ShopProject project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=ciexdmfrtr&-_)s47tr34t8^0uw2x_63)cqdg)-l_zm6#tz#x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 第三方应用
    'DjangoUeditor',
    'xadmin',
    'crispy_forms',  # django form 在html页面呈现方式进行管理的第三方插件
    'reversion',  # 给admin后台管理提供强大的回滚与恢复功能
    'rest_framework',
    'django_filters',
    'coreapi',
    # DRF基于token令牌认证的应用
    'rest_framework.authtoken',
    # 'corsheaders',
    'coreschema',
    #注册子应用
    'app.goods',
    'app.users',
    'app.trade',
    'app.user_operate',


]

MIDDLEWARE = [
    'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ShopProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ShopProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
#
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ShopProject',
        'USER': 'shopuser',
        'PASSWORD': 'westos',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        #django默认引擎为myisam，第三方登录需要引擎INNODB
        'OPTIONS':{'init_command': 'SET default_storage_engine=INNODB;'}
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

AUTH_USER_MODEL= 'users.UserProfile'

# http://XXX:8000/media/hello.png
MEDIA_URL='/media/' #用户访问media的信息例如图片时的前缀  url地址
#设置media的保存路径，media/hello.png
MEDIA_ROOT=os.path.join(BASE_DIR,'media')

AUTHENTICATION_BACKENDS=(
    # 'django.contrib.auth.backends.ModelBackend',
    #使用自定义的认证
    'app.users.views.CustomBackend',
)
REST_FRAMEWORK = {
    # 指定用于支持coreapi的Schema
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
'PAGE_SIZE': 10,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 此身份验证方案使用HTTP基本身份验证，根据用户的用户名和密码进行签名。仅用于测试。
        'rest_framework.authentication.BasicAuthentication',
        # 此身份验证方案使用Django的默认会话后端进行身份验证。
        'rest_framework.authentication.SessionAuthentication',
        # 此身份验证方案使用基于令牌的简单HTTP身份验证方案。令牌认证适用于客户端 - 服务器设置。
        # 'rest_framework.authentication.TokenAuthentication'
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
# 限速设置
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',  # 未登陆用户
        'rest_framework.throttling.UserRateThrottle'  # 登陆用户
    ),
    'DEFAULT_THROTTLE_RATES': {
        # *****************测试配置***********************
        # 'anon': '3/minute',  # 每分钟可以请求3次
        # 'user': '5/minute'  # 每分钟可以请求五次
        # ******************生产环境的配置****************
        'anon': '100/day',
        'user': '1000/day'
    }

}

import datetime
JWT_AUTH={
    'JWT_EXPIRATION_DELTA':datetime.timedelta(days=7), #token信息7天后过期
    'JWT_AUTH_HEADER_PREFIX':'JWT' #token前缀
}

# 正则验证手机号码，11位数字，1开头，第二位数必须是3456789这些数字之一
# ^:以什么开头, $以什么结尾。 [3456789]字符集， 代表电话号码的第2位是3或者4或者....
# \d: digit, 数值， \d{9}: 数值出现9次。
REGEX_MOBILE = '^1[345789]\d{9}$'
# 云片网APIKEY
APIKEY = "728ae485e15be5da2391b34618de4cfa"

# 支付宝配置信息
APPID = '2016102400750305'
# 支付宝相关的key
private_key_path = os.path.join(BASE_DIR, 'app/trade/keys/应用私钥2048.txt')
ali_pub_key_path = os.path.join(BASE_DIR, 'app/trade/keys/支付宝公钥.txt')

# 买家测试账号
user_account = 'ivwmbs5718@sandbox.com'

# # 跨域
# CORS_ORIGIN_ALLOW_ALL = True
# Redis缓存的配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://139.129.242.232/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True

